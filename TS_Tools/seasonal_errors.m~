function errors = seasonal_errors(obs, mdl, vars, error_mtrcs, isssnl)

if isssnl == false
    obs = ts_average(obs, 'seasonal');
    mdl = ts_average(mdl, 'seasonal');
end

error_dummy = obs;

for i = 1:length(error_mtrcs)
    error_dummy = obs;
    
    if strcmp(error_mtrcs{i}, 'rmse')
        % For the RMSE, compute the squared error
        tmp = structerrs(obs, mdl, vars, {'se'});
        % Replace the data matrix in the dummy with the squared errors
        error_dummy.Data.(vars) = tmp.se;
        % Compute the seasonal (long term) average of the errors
        tmp = ts_average(error_dummy, 'seasonal_lt');
        % Save the errors in the output structure
        errs.ssnl_2d.rmse = tmp.Data.(vars);
        
    elseif strcmp(error_mtrcs{i}, 'pbias')
        % For the PBIAS, compute the "normal" errors
        tmp = structerrs(obs, mdl, vars, {'e'});
         % Replace the data matrix in the dummy with the squared errors
        error_dummy.Data.(vars) = tmp.e;
        keyboard
        % Compute the seasonal sums of the normal errors
        tmp = ts_average(error_dummy, 'seasonal_lt', 'sum', {vars});
        % Compute the sum of observations
        obs_sum = ts_average(obs, 'seasonal_lt', 'sum', {vars});
        
        errs.ssnl_2d.pbias = tmp.Data.(vars)./obs_sum.Data.(vars);
    elseif strcmp(error_mtrcs{i}, 'corr')
        % Compute the correlation 
        for j = 1:4
            obs_tmp = 
            errs.corr(i, :, :) = 
        
        
        
    end
end
            